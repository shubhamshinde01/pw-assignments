1. program to display current date and time in java.
Ans:

Output:
javac DateTime.java
java DateTime
2023-03-30
10:33:11.025394800

2. Write a program to convert a date to a string in the format "MM/dd/yyyy".
Ans:

Output:
javac DateToString.java
java DateToString
Formatted Date: 04/04/2023


3. What is the difference between collections and streams?Explain with an Example
import java.io.*;
import java.util.*;
class Main {
public static void main(String[] args)
{
List<String> CompanyList = new ArrayList<>();
CompanyList.add("Google");
CompanyList.add("Apple");
CompanyList.add("Microsoft");
Comparator<String> com = (String o1, String o2) -> o1.compareTo(o2);
Collections.sort(CompanyList, com);
for (String name : CompanyList) {
System.out.println(name);
}
}
}


4. What is enums in java? explain with an example
Ans: We can use enum to define a group of named constants.
Enums are used to represent a collection of related constants that have a common purpose. Each constant in an
enum is an instance of the enum type, and they are typically defined as public static final fields.
Here's an example of how to define an enum in Java:

Here we define an enum called "DayOfWeek" that represents the days of the week. The enum has seven
constants, each representing a day of the week. The constants are defined in all uppercase letters by convention.
5. What are in built annotations in java
Ans: built-in annotations in Java:
@Override
@Deprecated
class EnumDemo{
public enum DayOfWeek {
MONDAY,
TUESDAY,
WEDNESDAY,
THURSDAY,
FRIDAY,
SATURDAY,
SUNDAY
}
public static void main(String args[]){
for(DayOfWeek d:DayOfWeek.values())
System.out.println(d);
}
}

5. What are in built annotations in java
Ans: built-in annotations in Java:
@Override
@Deprecated
@SuppressWarnings
@FunctionalInterface
@Retention
@Target
@Documented
@Inherited
These built-in annotations in Java are used to provide additional information to the Java compiler and other
tools. They help improve code readability, maintainability, and safety by enforcing specific rules and behaviours
in Java code.